{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Navigation.js\";\nimport { NavLink } from \"react-router-dom\";\nimport { isEmptyArray } from \"../functions/helperFunctions\";\nimport apodNavIcon from \"../images/apodNavIcon.png\";\nimport likesNavIcon from \"../images/likesNavIcon.png\";\nimport luckyNavIcon from \"../images/luckyNavIcon.png\";\nimport marsNavIcon from \"../images/marsNavIcon.png\";\nimport \"../css/nav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = ({\n  links\n}) => {\n  const likedIds = window.localStorage.getItem(\"favorites-ids\");\n  const noLikes = likedIds === null || isEmptyArray(likedIds) ? true : false;\n  const icons = {\n    \"Mars Rover Gallery\": marsNavIcon,\n    \"Pic of the Day Gallery\": apodNavIcon,\n    \"Feeling Lucky Gallery\": luckyNavIcon,\n    \"Loved Gallery\": likesNavIcon\n  };\n  const typingNode = document.querySelector(\"#type-text\");\n  const linkHover = Array.from(document.querySelectorAll(\".link-hover\"));\n\n  const sleep = time => new Promise(resolve => setTimeout(resolve, time));\n\n  let finished = true;\n\n  const linkValidation = (obj, index) => {\n    if (obj.link === \"/\" || noLikes && obj.link === \"/gallery/loved\") {\n      return;\n    } else {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: obj.link,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-icon link-hover\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icons[obj.name],\n            alt: obj.name,\n            width: \"48\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const addStuff = link => {\n    typingNode.innerText = \"\";\n    typingNode.type(link.dataset.content);\n  };\n\n  linkHover.map(link => {\n    link.addEventListener(\"mouseover\", function () {\n      if (finished) {\n        return addStuff(link);\n      }\n\n      return null;\n    });\n    /*\n    link.addEventListener(\"mouseleave\", function () {\n      node.innerText = \"...\"\n    });*/\n  });\n\n  class TypeAsync extends HTMLSpanElement {\n    get typeInterval() {\n      const randomMs = 20 * Math.random();\n      return randomMs < 50 ? 10 : randomMs;\n    }\n\n    async type(text) {\n      finished = false;\n\n      for (let character of text) {\n        this.innerText += character;\n        await sleep(this.typeInterval);\n      }\n\n      finished = true;\n    }\n\n    async delete(text) {\n      for (let character of text) {\n        this.innerText = this.innerText.slice(0, this.innerText.length - 1);\n        await sleep(this.typeInterval);\n      }\n    }\n\n  }\n\n  window.customElements.define(\"type-async\", TypeAsync, {\n    extends: \"span\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-nav--wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-nav--links\",\n      children: links.map((obj, index) => {\n        return linkValidation(obj, index);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-nav--text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        is: \"type-async\",\n        id: \"type-text\",\n        children: \"Navigate to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blinking-cursor\",\n        children: \"_\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Navigation.js"],"names":["NavLink","isEmptyArray","apodNavIcon","likesNavIcon","luckyNavIcon","marsNavIcon","Navigation","links","likedIds","window","localStorage","getItem","noLikes","icons","typingNode","document","querySelector","linkHover","Array","from","querySelectorAll","sleep","time","Promise","resolve","setTimeout","finished","linkValidation","obj","index","link","name","addStuff","innerText","type","dataset","content","map","addEventListener","TypeAsync","HTMLSpanElement","typeInterval","randomMs","Math","random","text","character","delete","slice","length","customElements","define","extends"],"mappings":"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","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport { isEmptyArray } from \"../functions/helperFunctions\";\nimport apodNavIcon from \"../images/apodNavIcon.png\";\nimport likesNavIcon from \"../images/likesNavIcon.png\";\nimport luckyNavIcon from \"../images/luckyNavIcon.png\";\nimport marsNavIcon from \"../images/marsNavIcon.png\";\nimport \"../css/nav.css\";\n\nconst Navigation = ({ links }) => {\n  const likedIds = window.localStorage.getItem(\"favorites-ids\");\n  const noLikes = likedIds === null || isEmptyArray(likedIds) ? true : false;\n  const icons = {\n    \"Mars Rover Gallery\": marsNavIcon,\n    \"Pic of the Day Gallery\": apodNavIcon,\n    \"Feeling Lucky Gallery\": luckyNavIcon,\n    \"Loved Gallery\": likesNavIcon,\n  };\n  const typingNode = document.querySelector(\"#type-text\");\n  const linkHover = Array.from(document.querySelectorAll(\".link-hover\"));\n  const sleep = (time) => new Promise((resolve) => setTimeout(resolve, time));\n  let finished = true;\n\n  const linkValidation = (obj, index) => {\n    if (obj.link === \"/\" || (noLikes && obj.link === \"/gallery/loved\")) {\n      return;\n    } else {\n      return (\n        <NavLink key={index} to={obj.link}>\n          <div className=\"nav-icon link-hover\">\n            <img src={icons[obj.name]} alt={obj.name} width=\"48\" />\n          </div>\n        </NavLink>\n      );\n    }\n  };\n\n  const addStuff = (link) => {\n    typingNode.innerText = \"\";\n    typingNode.type(link.dataset.content);\n  };\n\n  linkHover.map((link) => {\n    link.addEventListener(\"mouseover\", function () {\n      if (finished) {\n        return addStuff(link);\n      }\n      return null;\n    });\n    /*\n    link.addEventListener(\"mouseleave\", function () {\n      node.innerText = \"...\"\n    });*/\n  });\n\n  class TypeAsync extends HTMLSpanElement {\n    get typeInterval() {\n      const randomMs = 20 * Math.random();\n      return randomMs < 50 ? 10 : randomMs;\n    }\n\n    async type(text) {\n      finished = false;\n      for (let character of text) {\n        this.innerText += character;\n        await sleep(this.typeInterval);\n      }\n      finished = true;\n    }\n\n    async delete(text) {\n      for (let character of text) {\n        this.innerText = this.innerText.slice(0, this.innerText.length - 1);\n        await sleep(this.typeInterval);\n      }\n    }\n  }\n\n  window.customElements.define(\"type-async\", TypeAsync, { extends: \"span\" });\n\n  return (\n    <div className=\"main-nav--wrapper\">\n      <div className=\"main-nav--links\">\n        {links.map((obj, index) => {\n          return linkValidation(obj, index);\n        })}\n      </div>\n      <div className=\"main-nav--text\">\n        <span is=\"type-async\" id=\"type-text\">\n          Navigate to:\n        </span>\n        <span className=\"blinking-cursor\">_</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}