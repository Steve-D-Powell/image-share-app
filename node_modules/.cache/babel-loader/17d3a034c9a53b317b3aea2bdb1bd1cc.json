{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = props => {\n  _s();\n\n  const [galleryImages, setGalleryImages] = useState(\"unloaded\");\n  const [totalImages, setTotalImages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sizePerPage, setSizePerPage] = useState(10);\n  const [startPage, setStartPage] = useState(1);\n  const [endPage, setEndPage] = useState(10);\n  useEffect(() => {\n    console.log(\"Ran a update in Gallery\");\n\n    async function getTotalImages() {\n      try {\n        const response = await fetch(props.galleryUrl);\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTotalImages().then(data => {\n      if (data !== undefined) {\n        setTotalImages(data.photos.length);\n      }\n    });\n\n    async function getGalleryImages() {\n      try {\n        const response = await fetch(`${props.galleryUrl}&page=${currentPage}`);\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getGalleryImages().then(data => {\n      if (data !== undefined) {\n        setGalleryImages(data.photos);\n      }\n    });\n  }, [currentPage, props.galleryUrl]);\n\n  const changeCurrentPage = numPage => {\n    setCurrentPage(numPage);\n  };\n\n  if (galleryImages === \"unloaded\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: galleryImages.slice(startPage, endPage + 1).map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n        index: index,\n        imageObj: image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      changeCurrentPage: changeCurrentPage,\n      totalSize: totalImages,\n      sizePerPage: sizePerPage,\n      theme: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"current Page:\", currentPage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"bl6gjtB0jkfkk1zzxC7BufvgB18=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","Pagination","Gallery","props","galleryImages","setGalleryImages","totalImages","setTotalImages","currentPage","setCurrentPage","sizePerPage","setSizePerPage","startPage","setStartPage","endPage","setEndPage","console","log","getTotalImages","response","fetch","galleryUrl","ok","Error","statusText","json","err","then","data","undefined","photos","length","getGalleryImages","changeCurrentPage","numPage","slice","map","image","index"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\n\nconst Gallery = (props) => {\n  const [galleryImages, setGalleryImages] = useState(\"unloaded\");\n  const [totalImages, setTotalImages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sizePerPage, setSizePerPage] = useState(10);\n  const [startPage, setStartPage] = useState(1);\n  const [endPage, setEndPage] = useState(10);\n\n  useEffect(() => {\n    console.log(\"Ran a update in Gallery\");\n    async function getTotalImages() {\n      try {\n        const response = await fetch(props.galleryUrl);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTotalImages().then((data) => {\n      if (data !== undefined) {\n        setTotalImages(data.photos.length);\n      }\n    });\n\n    async function getGalleryImages() {\n      try {\n        const response = await fetch(`${props.galleryUrl}&page=${currentPage}`);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getGalleryImages().then((data) => {\n      if (data !== undefined) {\n        setGalleryImages(data.photos);\n      }\n    });\n  }, [currentPage, props.galleryUrl]);\n\n  const changeCurrentPage = (numPage) => {\n    setCurrentPage(numPage);\n  };\n\n  if (galleryImages === \"unloaded\") {\n    return <div>No Images Found</div>;\n  }\n\n  return (\n    <>\n      <div className=\"grid-container\">\n        {galleryImages.slice(startPage, endPage + 1).map((image, index) => (\n          <GalleryImage key={index} index={index} imageObj={image} />\n        ))}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        changeCurrentPage={changeCurrentPage}\n        totalSize={totalImages}\n        sizePerPage={sizePerPage}\n        theme=\"dark\"\n      />\n      <h2>current Page:{currentPage}</h2>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}