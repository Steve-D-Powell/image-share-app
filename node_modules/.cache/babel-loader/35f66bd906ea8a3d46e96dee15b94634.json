{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport createReactCustomElement from './ReactCustomElement';\n\nvar createReactCustomElementWithProps = function createReactCustomElementWithProps(Component, properties) {\n  var useShadowDOM = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return /*#__PURE__*/function (_createReactCustomEle) {\n    _inherits(ReactCustomElementWithProps, _createReactCustomEle);\n\n    var _super = _createSuper(ReactCustomElementWithProps);\n\n    function ReactCustomElementWithProps() {\n      var _this;\n\n      _classCallCheck(this, ReactCustomElementWithProps);\n\n      _this = _super.call(this);\n      _this.props = {};\n      _this.hasConnected = false;\n      return _this;\n    }\n\n    _createClass(ReactCustomElementWithProps, [{\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(name, oldValue, newValue) {\n        var _this2 = this;\n\n        if (oldValue === newValue) {\n          return;\n        }\n\n        var propName = this.getPropName(name);\n        this.props[propName] = newValue; // If already connected and prop changed, need to update the React App\n\n        if (this.hasConnected) {\n          Promise.resolve().then(function () {\n            _this2.renderApp();\n          });\n        }\n      }\n    }, {\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        this.hasConnected = true;\n\n        _get(_getPrototypeOf(ReactCustomElementWithProps.prototype), \"connectedCallback\", this).call(this);\n      }\n    }, {\n      key: \"renderApp\",\n      value: function renderApp() {\n        ReactDOM.render( /*#__PURE__*/React.createElement(Component, _extends({\n          renderRoot: this.renderRoot\n        }, this.props)), this.renderRoot);\n      }\n    }, {\n      key: \"getPropName\",\n      value: function getPropName(attrName) {\n        return attrName.replace(/-([a-z])/g, function (g) {\n          return g[1].toUpperCase();\n        });\n      }\n    }], [{\n      key: \"observedAttributes\",\n      get: function get() {\n        return properties || [];\n      }\n    }]);\n\n    return ReactCustomElementWithProps;\n  }(createReactCustomElement(Component, useShadowDOM));\n};\n\nexport default createReactCustomElementWithProps;","map":{"version":3,"sources":["../src/ReactCustomElementWithProps.tsx"],"names":["createReactCustomElementWithProps","useShadowDOM","createReactCustomElement","properties","oldValue","propName","Promise","ReactDOM","renderRoot","g"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,WAAA;AAEA,OAAA,wBAAA,MAAA,sBAAA;;AAEA,IAAMA,iCAAiC,GAAG,SAApCA,iCAAoC,CAAA,SAAA,EAAA,UAAA,EAIN;AAAA,MADlCC,YACkC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADnB,IACmB;AAClC,SAAA,aAAA,UAAA,qBAAA,EAAA;AAAA,IAAA,SAAA,CAAA,2BAAA,EAAA,qBAAA,CAAA;;AAAA,QAAA,MAAA,GAAA,YAAA,CAAA,2BAAA,CAAA;;AAIE,aAAA,2BAAA,GAAqB;AAAA,UAAA,KAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,2BAAA,CAAA;;AACnB,MAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAEA,MAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,YAAA,GAAA,KAAA;AAJmB,aAAA,KAAA;AAKpB;;AATH,IAAA,YAAA,CAAA,2BAAA,EAAA,CAAA;AAAA,MAAA,GAAA,EAAA,0BAAA;AAAA,MAAA,KAAA,EAAA,SAAA,wBAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAe8E;AAAA,YAAA,MAAA,GAAA,IAAA;;AAC1E,YAAIG,QAAQ,KAAZ,QAAA,EAA2B;AACzB;AACD;;AAED,YAAMC,QAAQ,GAAG,KAAA,WAAA,CAAjB,IAAiB,CAAjB;AACA,aAAA,KAAA,CAAA,QAAA,IAN0E,QAM1E,CAN0E,CAQ1E;;AACA,YAAI,KAAJ,YAAA,EAAuB;AACrBC,UAAAA,OAAO,CAAPA,OAAAA,GAAAA,IAAAA,CAAuB,YAAM;AAC3B,YAAA,MAAI,CAAJ,SAAA;AADFA,WAAAA;AAGD;AACF;AA7BH,KAAA,EAAA;AAAA,MAAA,GAAA,EAAA,mBAAA;AAAA,MAAA,KAAA,EAAA,SAAA,iBAAA,GA+B6B;AACzB,aAAA,YAAA,GAAA,IAAA;;AACA,QAAA,IAAA,CAAA,eAAA,CAAA,2BAAA,CAAA,SAAA,CAAA,EAAA,mBAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA;AACD;AAlCH,KAAA,EAAA;AAAA,MAAA,GAAA,EAAA,WAAA;AAAA,MAAA,KAAA,EAAA,SAAA,SAAA,GAoCqB;AACjBC,QAAAA,QAAQ,CAARA,MAAAA,EAAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AAAW,UAAA,UAAU,EAAE,KAAKC;AAA5B,SAAA,EAA4C,KAD9CD,KACE,CAAA,CADFA,EAEE,KAFFA,UAAAA;AAID;AAzCH,KAAA,EAAA;AAAA,MAAA,GAAA,EAAA,aAAA;AAAA,MAAA,KAAA,EAAA,SAAA,WAAA,CAAA,QAAA,EA2C0C;AACtC,eAAO,QAAQ,CAAR,OAAA,CAAA,WAAA,EAA8B,UAAA,CAAA,EAAA;AAAA,iBAAOE,CAAC,CAADA,CAAC,CAADA,CAAP,WAAOA,EAAP;AAArC,SAAO,CAAP;AACD;AA7CH,KAAA,CAAA,EAAA,CAAA;AAAA,MAAA,GAAA,EAAA,oBAAA;AAAA,MAAA,GAAA,EAAA,SAAA,GAAA,GAWyC;AACrC,eAAON,UAAU,IAAjB,EAAA;AACD;AAbH,KAAA,CAAA,CAAA;;AAAA,WAAA,2BAAA;AAAA,GAAA,CAAiDD,wBAAwB,CAAA,SAAA,EAAzE,YAAyE,CAAzE,CAAA;AALF,CAAA;;AAsDA,eAAA,iCAAA","sourcesContent":["import React, { ComponentType } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BaseReactCustomElement from './BaseReactCustomElement';\nimport createReactCustomElement from './ReactCustomElement';\n\nconst createReactCustomElementWithProps = (\n  Component: ComponentType<any>,\n  properties: string[],\n  useShadowDOM = true\n): typeof BaseReactCustomElement => {\n  return class ReactCustomElementWithProps extends createReactCustomElement(Component, useShadowDOM) {\n    protected props: any;\n    protected hasConnected: boolean;\n\n    public constructor() {\n      super();\n\n      this.props = {};\n      this.hasConnected = false;\n    }\n\n    public static get observedAttributes() {\n      return properties || [];\n    };\n\n    public attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n      if (oldValue === newValue) {\n        return;\n      }\n\n      const propName = this.getPropName(name);\n      this.props[propName] = newValue;\n\n      // If already connected and prop changed, need to update the React App\n      if (this.hasConnected) {\n        Promise.resolve().then(() => {\n          this.renderApp();\n        });\n      }\n    }\n\n    public connectedCallback() {\n      this.hasConnected = true;\n      super.connectedCallback();\n    }\n\n    public renderApp() {\n      ReactDOM.render(\n        <Component renderRoot={this.renderRoot} {...this.props} />,\n        this.renderRoot as Element\n      );\n    }\n\n    protected getPropName(attrName: string) {\n      return attrName.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n    }\n  };\n};\n\nexport default createReactCustomElementWithProps;\n"]},"metadata":{},"sourceType":"module"}