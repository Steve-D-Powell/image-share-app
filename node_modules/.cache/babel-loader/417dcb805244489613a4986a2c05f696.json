{"ast":null,"code":"import GalleryImage from\"./GalleryImage\";import{SRLWrapper}from\"simple-react-lightbox-pro\";import{jsx as _jsx}from\"react/jsx-runtime\";var ReadyToRender=function ReadyToRender(props){if(props.chosenGallery===props.galleryUrl){var likeImageClickHandler=function likeImageClickHandler(event){var imageEl=event.target.closest(\".gallery-image\");var image={id:imageEl.dataset.mediaId,src:imageEl.dataset.mediaSrc,title:imageEl.dataset.mediaTitle,date:imageEl.dataset.mediaDate,media_type:imageEl.dataset.mediaType};if(event.target.checked){props.updateFave(image,\"add\");}else{var newFaveImages=props.faveGallery.filter(function(currentImg){return currentImg.id!==image.id;});var newFaveIds=props.faveIds.filter(function(id){return id!==image.id;});if(props.galleryName===\"loved\"){props.setGalleryUrl(\"Reset\");}props.updateFave({images:newFaveImages,ids:newFaveIds},\"remove\");}};var constructId=function constructId(image){if(props.galleryName===\"loved\"){return image.id;}else{return props.galleryName!==\"mars-rover\"?\"\".concat(image.title.replace(/ /g,\"-\"),\"-\").concat(image.date):image.id.toString();}};return/*#__PURE__*/_jsx(SRLWrapper,{children:props.currentGallery.map(function(image,index){return/*#__PURE__*/_jsx(GalleryImage,{liked:props.faveIds.includes(constructId(image)),test:image.id,image:image,hqImage:props.hqImage,galleryName:props.galleryName,likeImageClickHandler:likeImageClickHandler},index);})});}else{return null;}};export default ReadyToRender;","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/ReadyToRender.js"],"names":["GalleryImage","SRLWrapper","ReadyToRender","props","chosenGallery","galleryUrl","likeImageClickHandler","event","imageEl","target","closest","image","id","dataset","mediaId","src","mediaSrc","title","mediaTitle","date","mediaDate","media_type","mediaType","checked","updateFave","newFaveImages","faveGallery","filter","currentImg","newFaveIds","faveIds","galleryName","setGalleryUrl","images","ids","constructId","replace","toString","currentGallery","map","index","includes","hqImage"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,UAAT,KAA2B,2BAA3B,C,2CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,GAAIA,KAAK,CAACC,aAAN,GAAwBD,KAAK,CAACE,UAAlC,CAA8C,CAC5C,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACvC,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,gBAArB,CAAhB,CACA,GAAMC,CAAAA,KAAK,CAAG,CACZC,EAAE,CAAEJ,OAAO,CAACK,OAAR,CAAgBC,OADR,CAEZC,GAAG,CAAEP,OAAO,CAACK,OAAR,CAAgBG,QAFT,CAGZC,KAAK,CAAET,OAAO,CAACK,OAAR,CAAgBK,UAHX,CAIZC,IAAI,CAAEX,OAAO,CAACK,OAAR,CAAgBO,SAJV,CAKZC,UAAU,CAAEb,OAAO,CAACK,OAAR,CAAgBS,SALhB,CAAd,CAQA,GAAIf,KAAK,CAACE,MAAN,CAAac,OAAjB,CAA0B,CACxBpB,KAAK,CAACqB,UAAN,CAAiBb,KAAjB,CAAwB,KAAxB,EACD,CAFD,IAEO,CACL,GAAMc,CAAAA,aAAa,CAAGtB,KAAK,CAACuB,WAAN,CAAkBC,MAAlB,CACpB,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAAChB,EAAX,GAAkBD,KAAK,CAACC,EAAxC,EADoB,CAAtB,CAGA,GAAMiB,CAAAA,UAAU,CAAG1B,KAAK,CAAC2B,OAAN,CAAcH,MAAd,CAAqB,SAACf,EAAD,QAAQA,CAAAA,EAAE,GAAKD,KAAK,CAACC,EAArB,EAArB,CAAnB,CAEA,GAAIT,KAAK,CAAC4B,WAAN,GAAsB,OAA1B,CAAmC,CACjC5B,KAAK,CAAC6B,aAAN,CAAoB,OAApB,EACD,CACD7B,KAAK,CAACqB,UAAN,CAAiB,CAAES,MAAM,CAAER,aAAV,CAAyBS,GAAG,CAAEL,UAA9B,CAAjB,CAA6D,QAA7D,EACD,CACF,CAvBD,CAyBA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACxB,KAAD,CAAW,CAC7B,GAAIR,KAAK,CAAC4B,WAAN,GAAsB,OAA1B,CAAmC,CACjC,MAAOpB,CAAAA,KAAK,CAACC,EAAb,CACD,CAFD,IAEO,CACL,MAAOT,CAAAA,KAAK,CAAC4B,WAAN,GAAsB,YAAtB,WACApB,KAAK,CAACM,KAAN,CAAYmB,OAAZ,CAAoB,IAApB,CAA0B,GAA1B,CADA,aACkCzB,KAAK,CAACQ,IADxC,EAEHR,KAAK,CAACC,EAAN,CAASyB,QAAT,EAFJ,CAGD,CACF,CARD,CAUA,mBACE,KAAC,UAAD,WACGlC,KAAK,CAACmC,cAAN,CAAqBC,GAArB,CAAyB,SAAC5B,KAAD,CAAQ6B,KAAR,qBACxB,KAAC,YAAD,EAEE,KAAK,CAAErC,KAAK,CAAC2B,OAAN,CAAcW,QAAd,CAAuBN,WAAW,CAACxB,KAAD,CAAlC,CAFT,CAGE,IAAI,CAAEA,KAAK,CAACC,EAHd,CAIE,KAAK,CAAED,KAJT,CAKE,OAAO,CAAER,KAAK,CAACuC,OALjB,CAME,WAAW,CAAEvC,KAAK,CAAC4B,WANrB,CAOE,qBAAqB,CAAEzB,qBAPzB,EACOkC,KADP,CADwB,EAAzB,CADH,EADF,CAeD,CAnDD,IAmDO,CACL,MAAO,KAAP,CACD,CACF,CAvDD,CAyDA,cAAetC,CAAAA,aAAf","sourcesContent":["import GalleryImage from \"./GalleryImage\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\n\nconst ReadyToRender = (props) => {\n  if (props.chosenGallery === props.galleryUrl) {\n    const likeImageClickHandler = (event) => {\n      const imageEl = event.target.closest(\".gallery-image\");\n      const image = {\n        id: imageEl.dataset.mediaId,\n        src: imageEl.dataset.mediaSrc,\n        title: imageEl.dataset.mediaTitle,\n        date: imageEl.dataset.mediaDate,\n        media_type: imageEl.dataset.mediaType,\n      };\n\n      if (event.target.checked) {\n        props.updateFave(image, \"add\");\n      } else {\n        const newFaveImages = props.faveGallery.filter(\n          (currentImg) => currentImg.id !== image.id\n        );\n        const newFaveIds = props.faveIds.filter((id) => id !== image.id);\n\n        if (props.galleryName === \"loved\") {\n          props.setGalleryUrl(\"Reset\");\n        }\n        props.updateFave({ images: newFaveImages, ids: newFaveIds }, \"remove\");\n      }\n    };\n\n    const constructId = (image) => {\n      if (props.galleryName === \"loved\") {\n        return image.id;\n      } else {\n        return props.galleryName !== \"mars-rover\"\n          ? `${image.title.replace(/ /g, \"-\")}-${image.date}`\n          : image.id.toString();\n      }\n    };\n\n    return (\n      <SRLWrapper>\n        {props.currentGallery.map((image, index) => (\n          <GalleryImage\n            key={index}\n            liked={props.faveIds.includes(constructId(image))}\n            test={image.id}\n            image={image}\n            hqImage={props.hqImage}\n            galleryName={props.galleryName}\n            likeImageClickHandler={likeImageClickHandler}\n          />\n        ))}\n      </SRLWrapper>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default ReadyToRender;\n"]},"metadata":{},"sourceType":"module"}