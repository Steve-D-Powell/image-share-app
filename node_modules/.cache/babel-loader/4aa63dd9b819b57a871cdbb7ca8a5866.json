{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [imageOfTheDay, setImageOfTheDay] = useState({\n    url: \"/images/stars.jpg\"\n  });\n  const [headerIsLoaded, setHeaderIsLoaded] = useState(false);\n  useEffect(() => {\n    console.log(\"Updated the Header Image\");\n\n    async function getImageOfTheDay() {\n      try {\n        const response = await fetch(\"https://api.nasa.gov/planetary/apod?api_key=KnTfeP68Y6KMuMuhCMWSxjlYXsqjgoCWUo8chunG\");\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getImageOfTheDay().then(data => {\n      if (data !== undefined) {\n        setImageOfTheDay(data);\n        setHeaderIsLoaded(true);\n      }\n    });\n  }, []);\n  const styles = {\n    headerHero: {\n      backgroundImage: `url(${imageOfTheDay.url}`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-hero\",\n      style: styles.headerHero,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hero--text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"header-hero--text-container_logo\",\n          src: \"/images/nasa-logo.png\",\n          alt: \"Nasa Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hero--text_text\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Images From Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hero--text-container_bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hero--text-container_bg-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hero--text-container_note\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [imageOfTheDay.title, \" - \", imageOfTheDay.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"TjCNJxr/GbWXiWM2e1cpZ3A3YW4=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Header.js"],"names":["React","useState","useEffect","Header","props","imageOfTheDay","setImageOfTheDay","url","headerIsLoaded","setHeaderIsLoaded","console","log","getImageOfTheDay","response","fetch","ok","Error","statusText","json","err","then","data","undefined","styles","headerHero","backgroundImage","backgroundSize","backgroundPosition","title","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC;AACjDM,IAAAA,GAAG,EAAE;AAD4C,GAAD,CAAlD;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,mBAAeC,gBAAf,GAAkC;AAChC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sFAD0B,CAA5B;;AAGA,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD;;AACD,eAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,OARD,CAQE,OAAOC,GAAP,EAAY;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD;AACF;;AACDP,IAAAA,gBAAgB,GAAGQ,IAAnB,CAAyBC,IAAD,IAAU;AAChC,UAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtBhB,QAAAA,gBAAgB,CAACe,IAAD,CAAhB;AACAZ,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,KALD;AAMD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,QAAMc,MAAM,GAAG;AACbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAG,OAAMpB,aAAa,CAACE,GAAI,EADhC;AAEVmB,MAAAA,cAAc,EAAE,OAFN;AAGVC,MAAAA,kBAAkB,EAAE;AAHV;AADC,GAAf;AAQA,sBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAEJ,MAAM,CAACC,UAA3C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,kCADZ;AAEE,UAAA,GAAG,EAAC,uBAFN;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,+BACE;AAAA,qBACGnB,aAAa,CAACuB,KADjB,SAC2BvB,aAAa,CAACwB,IADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA7DD;;GAAM1B,M;;KAAAA,M;AA+DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/Header.css\";\n\nconst Header = (props) => {\n  const [imageOfTheDay, setImageOfTheDay] = useState({\n    url: \"/images/stars.jpg\",\n  });\n  const [headerIsLoaded, setHeaderIsLoaded] = useState(false);\n\n  useEffect(() => {\n    console.log(\"Updated the Header Image\");\n    async function getImageOfTheDay() {\n      try {\n        const response = await fetch(\n          \"https://api.nasa.gov/planetary/apod?api_key=KnTfeP68Y6KMuMuhCMWSxjlYXsqjgoCWUo8chunG\"\n        );\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getImageOfTheDay().then((data) => {\n      if (data !== undefined) {\n        setImageOfTheDay(data);\n        setHeaderIsLoaded(true);\n      }\n    });\n  }, []);\n\n  const styles = {\n    headerHero: {\n      backgroundImage: `url(${imageOfTheDay.url}`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n  };\n\n  return (\n    <header className=\"App-header\">\n      <div className=\"header-hero\" style={styles.headerHero}>\n        <div className=\"header-hero--text-container\">\n          <img\n            className=\"header-hero--text-container_logo\"\n            src=\"/images/nasa-logo.png\"\n            alt=\"Nasa Logo\"\n          />\n          <div className=\"header-hero--text_text\">\n            <span>Images From Space</span>\n          </div>\n        </div>\n        <div className=\"header-hero--text-container_bg\">\n          <div className=\"header-hero--text-container_bg-bar\"></div>\n        </div>\n        <div className=\"header-hero--text-container_note\">\n          <span>\n            {imageOfTheDay.title} - {imageOfTheDay.date}\n          </span>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}