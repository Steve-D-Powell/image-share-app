{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams, useReducer } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  galleryUrls\n}) => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  let params = useParams();\n  let initialGalleryUrl = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const [galleryUrl, setGalleryUrl] = useState(initialGalleryUrl);\n  const [galleryImages, setGalleryImages] = useState([]);\n  const [currentImages, setCurrentImages] = useState([]);\n  const [totalImages, setTotalImages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sizePerPage, setSizePerPage] = useState(10);\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  useEffect(() => {\n    console.log(\"Updated the Gallery\");\n\n    if (galleryUrl) {\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      getTotalImages().then(data => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          let currentImages = allImages.slice(0, 10);\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length\n          });\n        }\n      });\n    }\n  }, [galleryUrl]);\n  useEffect(() => {\n    console.log(\"Reloaded the Gallery\");\n\n    const updateImages = () => {\n      const startImg = (paginateState.current - 1) * paginateState.size;\n      const endImg = startImg + paginateState.size;\n      setGalleryState({\n        current: galleryState.images.slice(startImg, endImg)\n      });\n    };\n\n    updateImages();\n  }, [paginateState, galleryState]);\n\n  const selectNumImages = num => {\n    setPaginateState({\n      size: parseInt(num)\n    });\n  };\n\n  const changeCurrentPage = numPage => {\n    setPaginateState({\n      page: numPage\n    });\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== initialGalleryUrl) {\n      setGalleryUrl(initialGalleryUrl);\n    }\n  };\n\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n          index: index,\n          imageObj: image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls--container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"QlPRG5m2v9dt1AFMkp0FdWSqwBU=\", false, function () {\n  return [useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","Pagination","Select","SRLWrapper","useParams","useReducer","Gallery","galleryUrls","console","log","params","initialGalleryUrl","gallery","replace","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","galleryUrl","setGalleryUrl","galleryImages","setGalleryImages","currentImages","setCurrentImages","totalImages","setTotalImages","currentPage","setCurrentPage","sizePerPage","setSizePerPage","numberofImages","name","value","getTotalImages","response","fetch","ok","Error","statusText","json","err","then","data","undefined","allImages","photos","slice","length","updateImages","startImg","endImg","selectNumImages","num","parseInt","changeCurrentPage","numPage","checkGalleryUrl","map","image","index"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams, useReducer } from \"react-router-dom\";\n\nconst Gallery = ({ galleryUrls }) => {\n  console.log(\"Gallery Rendered\");\n  let params = useParams();\n  let initialGalleryUrl = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n\n  const [galleryUrl, setGalleryUrl] = useState(initialGalleryUrl);\n  const [galleryImages, setGalleryImages] = useState([]);\n  const [currentImages, setCurrentImages] = useState([]);\n  const [totalImages, setTotalImages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sizePerPage, setSizePerPage] = useState(10);\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  useEffect(() => {\n    console.log(\"Updated the Gallery\");\n    if (galleryUrl) {\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      getTotalImages().then((data) => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          let currentImages = allImages.slice(0, 10);\n\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length,\n          });\n        }\n      });\n    }\n  }, [galleryUrl]);\n\n  useEffect(() => {\n    console.log(\"Reloaded the Gallery\");\n\n    const updateImages = () => {\n      const startImg = (paginateState.current - 1) * paginateState.size;\n      const endImg = startImg + paginateState.size;\n\n      setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n    };\n    updateImages();\n  }, [paginateState, galleryState]);\n\n  const selectNumImages = (num) => {\n    setPaginateState({ size: parseInt(num) });\n  };\n\n  const changeCurrentPage = (numPage) => {\n    setPaginateState({ page: numPage });\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== initialGalleryUrl) {\n      setGalleryUrl(initialGalleryUrl);\n    }\n  };\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return <div>No Images Found</div>;\n  }\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      <div className=\"grid-container\">\n        <SRLWrapper>\n          {galleryState.current.map((image, index) => (\n            <GalleryImage key={index} index={index} imageObj={image} />\n          ))}\n        </SRLWrapper>\n      </div>\n      <div className=\"pagination-controls--container\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}