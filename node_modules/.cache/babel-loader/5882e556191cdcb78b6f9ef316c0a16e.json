{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport galleryUrls from \"../data/galleryUrls\";\nimport { client, galleryNotLoaded, galleryFetched } from \"../functions/galleryFunctions\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet test = [\"Hi\"];\n\nconst Gallery = () => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  console.log(\"Test\", test);\n  const likeInfo = useSelector(state => state.likes);\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [hqImage, setHqImage] = useState(false);\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  const showLoading = [\"mars-rover\", \"apod\", \"lucky\"];\n  const hasHiQualityImages = [\"apod\", \"lucky\"];\n  useEffect(() => {\n    setGalleryState({\n      images: [],\n      current: [],\n      total: 0\n    });\n  }, [chosenGallery]);\n  useEffect(() => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      console.log(\"Fetching\", chosenGallery);\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n\n      if (params.gallery === \"loved\") {\n        galleryFetched(likeInfo.images, paginateState, setGalleryState);\n      } else if (chosenGallery !== \"\") {\n        galleryNotLoaded();\n        client.get(chosenGallery).then(data => {\n          if (data !== undefined) {\n            galleryFetched(data.photos ? data.photos : data, paginateState, setGalleryState);\n          }\n        });\n      }\n    }\n  }, [galleryUrl, chosenGallery, params.gallery, likeInfo.images, paginateState]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n    setGalleryState({\n      current: galleryState.images.slice(startImg, endImg)\n    });\n  };\n\n  const selectNumImages = size => {\n    setPaginateState({\n      size: parseInt(size)\n    });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = page => {\n    setPaginateState({\n      page: page\n    });\n    updateImages(page, paginateState.size);\n  };\n\n  const highQualityImages = e => {\n    setHqImage(e.target.checked);\n  };\n\n  const readyToRender = () => {\n    if (galleryUrl === chosenGallery) {\n      return galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n        imageObj: image,\n        highqtyImage: hqImage,\n        galleryName: params.gallery,\n        galleryState: galleryState,\n        updateGalleryStateTotal: value => setGalleryState({\n          total: value\n        }),\n        resetGalleryUrl: url => setGalleryUrl(url)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const checkIfEmpty = () => {\n    if (galleryState.total === 0 && params.gallery === \"loved\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nothing to see here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const showHiQualityOption = () => {\n    if (hasHiQualityImages.includes(params.gallery)) {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"High-quality-images\",\n        children: [\"High Quality Images if available (Loads slower)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"High-quality-images\",\n          className: \"HD-selector\",\n          onChange: highQualityImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const showLoadingAnimation = () => {\n    if (showLoading.includes(params.gallery)) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), showHiQualityOption(), checkIfEmpty(), showLoadingAnimation(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container grid-container hide\",\n      children: readyToRender()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-pagination-controls--container hide\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"3p/M3g0RNHUtvFnEhJlxuMlIZPc=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","useReducer","Pagination","Select","SRLWrapper","useParams","Loading","galleryUrls","client","galleryNotLoaded","galleryFetched","useSelector","test","Gallery","console","log","likeInfo","state","likes","params","chosenGallery","gallery","replace","galleryUrl","setGalleryUrl","hqImage","setHqImage","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","numberofImages","name","value","showLoading","hasHiQualityImages","window","scrollTo","top","document","body","scrollHeight","behavior","get","then","data","undefined","photos","updateImages","startImg","endImg","slice","selectNumImages","parseInt","changeCurrentPage","highQualityImages","e","target","checked","readyToRender","map","image","index","url","checkIfEmpty","showHiQualityOption","includes","showLoadingAnimation"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport galleryUrls from \"../data/galleryUrls\";\nimport {\n  client,\n  galleryNotLoaded,\n  galleryFetched,\n} from \"../functions/galleryFunctions\";\nimport { useSelector } from \"react-redux\";\n\nlet test = [\"Hi\"];\n\nconst Gallery = () => {\n  console.log(\"Gallery Rendered\");\n  console.log(\"Test\", test);\n  const likeInfo = useSelector((state) => state.likes);\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [hqImage, setHqImage] = useState(false);\n\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  const showLoading = [\"mars-rover\", \"apod\", \"lucky\"];\n  const hasHiQualityImages = [\"apod\", \"lucky\"];\n\n  useEffect(() => {\n    setGalleryState({\n      images: [],\n      current: [],\n      total: 0,\n    });\n  }, [chosenGallery]);\n\n  useEffect(() => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      console.log(\"Fetching\", chosenGallery);\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n      if (params.gallery === \"loved\") {\n        galleryFetched(likeInfo.images, paginateState, setGalleryState);\n      } else if (chosenGallery !== \"\") {\n        galleryNotLoaded();\n        client.get(chosenGallery).then((data) => {\n          if (data !== undefined) {\n            galleryFetched(\n              data.photos ? data.photos : data,\n              paginateState,\n              setGalleryState\n            );\n          }\n        });\n      }\n    }\n  }, [\n    galleryUrl,\n    chosenGallery,\n    params.gallery,\n    likeInfo.images,\n    paginateState,\n  ]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n\n    setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n  };\n\n  const selectNumImages = (size) => {\n    setPaginateState({ size: parseInt(size) });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = (page) => {\n    setPaginateState({ page: page });\n    updateImages(page, paginateState.size);\n  };\n\n  const highQualityImages = (e) => {\n    setHqImage(e.target.checked);\n  };\n\n  const readyToRender = () => {\n    if (galleryUrl === chosenGallery) {\n      return galleryState.current.map((image, index) => (\n        <GalleryImage\n          key={index}\n          imageObj={image}\n          highqtyImage={hqImage}\n          galleryName={params.gallery}\n          galleryState={galleryState}\n          updateGalleryStateTotal={(value) => setGalleryState({ total: value })}\n          resetGalleryUrl={(url) => setGalleryUrl(url)}\n        />\n      ));\n    }\n  };\n\n  const checkIfEmpty = () => {\n    if (galleryState.total === 0 && params.gallery === \"loved\") {\n      return (\n        <div>\n          <span>Nothing to see here...</span>\n        </div>\n      );\n    }\n  };\n\n  const showHiQualityOption = () => {\n    if (hasHiQualityImages.includes(params.gallery)) {\n      return (\n        <label htmlFor=\"High-quality-images\">\n          High Quality Images if available (Loads slower)\n          <input\n            type=\"checkbox\"\n            id=\"High-quality-images\"\n            className=\"HD-selector\"\n            onChange={highQualityImages}\n          />\n        </label>\n      );\n    }\n  };\n\n  const showLoadingAnimation = () => {\n    if (showLoading.includes(params.gallery)) {\n      return <Loading />;\n    }\n  };\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      {showHiQualityOption()}\n      {checkIfEmpty()}\n      {showLoadingAnimation()}\n      <div className=\"gallery-container grid-container hide\">\n        {readyToRender()}\n      </div>\n      <div className=\"gallery-pagination-controls--container hide\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}