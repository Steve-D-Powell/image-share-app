{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport galleryUrls from \"../data/galleryUrls\";\nimport { client } from \"../functions/galleryFunctions\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  updateFaveState,\n  faveGallery,\n  faveIds\n}) => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  const likeInfo = useSelector(state => state.likes);\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hqImage, setHqImage] = useState(false);\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  useEffect(() => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  });\n  useEffect(() => {\n    console.log(\"Use Effect 1\");\n    setGalleryState({\n      images: [],\n      current: [],\n      total: 0\n    });\n  }, [chosenGallery]);\n  useEffect(() => {\n    console.log(\"Use Effect 2\");\n\n    const galleryUpdate = allImages => {\n      const startImg = (paginateState.page - 1) * paginateState.size;\n      const endImg = startImg + paginateState.size;\n      const currentImages = allImages.slice(startImg, endImg);\n      setGalleryState({\n        images: allImages,\n        current: currentImages,\n        total: allImages.length\n      });\n    };\n\n    if (!isLoaded) {\n      setIsLoaded(true);\n      console.log(\"Fetching\", galleryUrl);\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n\n      if (params.gallery === \"loved\" && likeInfo.images.length) {\n        galleryUpdate(likeInfo.images);\n      } else if (galleryUrl !== \"\") {\n        client.get(galleryUrl).then(data => {\n          if (data !== undefined) {\n            galleryUpdate(data.photos ? data.photos : data);\n          }\n        });\n      }\n    }\n  }, [galleryUrl, isLoaded, paginateState, params.gallery]);\n  useEffect(() => {\n    console.log(\"Use Effect 3\");\n\n    if (galleryState.total > 0) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document.querySelector(\".gallery-pagination-controls--container\").classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document.querySelector(\".gallery-pagination-controls--container\").classList.add(\"hide\");\n    }\n  }, [galleryState]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n    setGalleryState({\n      current: galleryState.images.slice(startImg, endImg)\n    });\n  };\n\n  const selectNumImages = size => {\n    setPaginateState({\n      size: parseInt(size)\n    });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = page => {\n    setPaginateState({\n      page: page\n    });\n    updateImages(page, paginateState.size);\n  };\n\n  const highQualityImages = e => {\n    setHqImage(e.target.checked);\n  };\n\n  const updateGalleryStateTotal = value => {\n    setGalleryState({\n      total: value\n    });\n  };\n\n  const updateLoaded = value => {\n    setIsLoaded(value);\n  };\n\n  const readyToRender = () => {\n    if (isLoaded) {\n      return /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n          imageObj: image,\n          highqtyImage: hqImage,\n          galleryName: params.gallery,\n          galleryState: galleryState,\n          updateGalleryStateTotal: value => setGalleryState({\n            total: value\n          }),\n          updateLoaded: updateLoaded\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const checkIfEmpty = () => {\n    if (galleryState.total === 0) {\n      if (params.gallery === \"loved\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Nothing to see here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Loading, {\n          isLoading: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Loading, {\n        isLoading: \"hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"High-quality-images\",\n      children: [\"High Quality Images if available (Loads slower)\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"High-quality-images\",\n        className: \"HD-selector\",\n        onChange: highQualityImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), checkIfEmpty(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container grid-container hide\",\n      children: readyToRender()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-pagination-controls--container hide\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"EK780xhQJjQ2t8Uhhg23gZERUDY=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","useReducer","Pagination","Select","SRLWrapper","useParams","Loading","galleryUrls","client","useSelector","Gallery","updateFaveState","faveGallery","faveIds","console","log","likeInfo","state","likes","params","chosenGallery","gallery","replace","galleryUrl","setGalleryUrl","isLoaded","setIsLoaded","hqImage","setHqImage","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","numberofImages","name","value","galleryUpdate","allImages","startImg","endImg","currentImages","slice","length","window","scrollTo","top","document","body","scrollHeight","behavior","get","then","data","undefined","photos","setTimeout","querySelector","classList","remove","add","updateImages","selectNumImages","parseInt","changeCurrentPage","highQualityImages","e","target","checked","updateGalleryStateTotal","updateLoaded","readyToRender","map","image","index","checkIfEmpty"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport galleryUrls from \"../data/galleryUrls\";\nimport { client } from \"../functions/galleryFunctions\";\nimport { useSelector } from \"react-redux\";\n\nconst Gallery = ({ updateFaveState, faveGallery, faveIds }) => {\n  console.log(\"Gallery Rendered\");\n  const likeInfo = useSelector((state) => state.likes);\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hqImage, setHqImage] = useState(false);\n\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  useEffect(() => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  });\n\n  useEffect(() => {\n    console.log(\"Use Effect 1\");\n    setGalleryState({\n      images: [],\n      current: [],\n      total: 0,\n    });\n  }, [chosenGallery]);\n\n  useEffect(() => {\n    console.log(\"Use Effect 2\");\n    const galleryUpdate = (allImages) => {\n      const startImg = (paginateState.page - 1) * paginateState.size;\n      const endImg = startImg + paginateState.size;\n      const currentImages = allImages.slice(startImg, endImg);\n\n      setGalleryState({\n        images: allImages,\n        current: currentImages,\n        total: allImages.length,\n      });\n    };\n\n    if (!isLoaded) {\n      setIsLoaded(true);\n      console.log(\"Fetching\", galleryUrl);\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n      if (params.gallery === \"loved\" && likeInfo.images.length) {\n        galleryUpdate(likeInfo.images);\n      } else if (galleryUrl !== \"\") {\n        client.get(galleryUrl).then((data) => {\n          if (data !== undefined) {\n            galleryUpdate(data.photos ? data.photos : data);\n          }\n        });\n      }\n    }\n  }, [galleryUrl, isLoaded, paginateState, params.gallery]);\n\n  useEffect(() => {\n    console.log(\"Use Effect 3\");\n    if (galleryState.total > 0) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document\n          .querySelector(\".gallery-pagination-controls--container\")\n          .classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document\n        .querySelector(\".gallery-pagination-controls--container\")\n        .classList.add(\"hide\");\n    }\n  }, [galleryState]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n\n    setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n  };\n\n  const selectNumImages = (size) => {\n    setPaginateState({ size: parseInt(size) });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = (page) => {\n    setPaginateState({ page: page });\n    updateImages(page, paginateState.size);\n  };\n\n  const highQualityImages = (e) => {\n    setHqImage(e.target.checked);\n  };\n\n  const updateGalleryStateTotal = (value) => {\n    setGalleryState({ total: value });\n  };\n\n  const updateLoaded = (value) => {\n    setIsLoaded(value);\n  };\n\n  const readyToRender = () => {\n    if (isLoaded) {\n      return (\n        <SRLWrapper>\n          {galleryState.current.map((image, index) => (\n            <GalleryImage\n              key={index}\n              imageObj={image}\n              highqtyImage={hqImage}\n              galleryName={params.gallery}\n              galleryState={galleryState}\n              updateGalleryStateTotal={(value) =>\n                setGalleryState({ total: value })\n              }\n              updateLoaded={updateLoaded}\n            />\n          ))}\n        </SRLWrapper>\n      );\n    }\n  };\n\n  const checkIfEmpty = () => {\n    if (galleryState.total === 0) {\n      if (params.gallery === \"loved\") {\n        return (\n          <div>\n            <span>Nothing to see here...</span>\n          </div>\n        );\n      } else {\n        return <Loading isLoading={\"\"} />;\n      }\n    } else {\n      return <Loading isLoading={\"hide\"} />;\n    }\n  };\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      <label htmlFor=\"High-quality-images\">\n        High Quality Images if available (Loads slower)\n        <input\n          type=\"checkbox\"\n          id=\"High-quality-images\"\n          className=\"HD-selector\"\n          onChange={highQualityImages}\n        />\n      </label>\n      {checkIfEmpty()}\n      <div className=\"gallery-container grid-container hide\">\n        {readyToRender()}\n      </div>\n      <div className=\"gallery-pagination-controls--container hide\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}