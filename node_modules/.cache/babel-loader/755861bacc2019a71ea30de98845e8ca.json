{"ast":null,"code":"export async function client(endpoint, {\n  body,\n  ...customConfig\n} = {}) {\n  const config = {\n    method: \"GET\",\n    ...customConfig,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...customConfig.headers\n    }\n  };\n\n  try {\n    const response = await fetch(endpoint, config);\n    console.log(response.body.getReader());\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig,\n    method: \"GET\"\n  });\n};","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/functions/galleryFunctions.js"],"names":["client","endpoint","body","customConfig","config","method","headers","response","fetch","console","log","getReader","ok","Error","statusText","json","err","get"],"mappings":"AAAA,OAAO,eAAeA,MAAf,CAAsBC,QAAtB,EAAgC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,IAA4B,EAA5D,EAAgE;AACrE,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEb,OAAGF,YAFU;AAGbG,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,SAAGH,YAAY,CAACG;AAFT;AAHI,GAAf;;AASA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAD,EAAWG,MAAX,CAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACL,IAAT,CAAcS,SAAd,EAAZ;;AACA,QAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAUN,QAAQ,CAACO,UAAnB,CAAN;AACD;;AACD,WAAO,MAAMP,QAAQ,CAACQ,IAAT,EAAb;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD;AACF;;AAEDhB,MAAM,CAACiB,GAAP,GAAa,UAAUhB,QAAV,EAAoBE,YAAY,GAAG,EAAnC,EAAuC;AAClD,SAAOH,MAAM,CAACC,QAAD,EAAW,EAAE,GAAGE,YAAL;AAAmBE,IAAAA,MAAM,EAAE;AAA3B,GAAX,CAAb;AACD,CAFD","sourcesContent":["export async function client(endpoint, { body, ...customConfig } = {}) {\n  const config = {\n    method: \"GET\",\n    ...customConfig,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...customConfig.headers,\n    },\n  };\n\n  try {\n    const response = await fetch(endpoint, config);\n    console.log(response.body.getReader());\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: \"GET\" });\n};\n"]},"metadata":{},"sourceType":"module"}