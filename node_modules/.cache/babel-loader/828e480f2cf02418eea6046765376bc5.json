{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  galleryUrls\n}) => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(chosenGallery);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  useEffect(() => {\n    if (!isLoaded) {\n      console.log(\"Updated the Gallery\");\n      const documentStyles = document.documentElement.style;\n      let progress = 0;\n      setIsLoaded(false);\n      axios({\n        url: galleryUrl,\n\n        onDownloadProgress(progressEvent) {\n          progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          documentStyles.setProperty(\"--progress\", `${progress}%`);\n        }\n\n      }).then(response => {\n        let data = response.data;\n\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length\n          });\n          setIsLoaded(true);\n        }\n      }).catch(error => {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n\n        console.log(error.config);\n      });\n      /*\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      getTotalImages().then((data) => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n           setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length,\n          });\n          setIsLoaded(true);\n        }\n      });*/\n    }\n  }, [galleryUrl, isLoaded, paginateState, chosenGallery]);\n  useEffect(() => {\n    if (isLoaded) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document.querySelector(\".gallery-pagination-controls--container\").classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document.querySelector(\".gallery-pagination-controls--container\").classList.add(\"hide\");\n    }\n  }, [isLoaded]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n    setGalleryState({\n      current: galleryState.images.slice(startImg, endImg)\n    });\n  };\n\n  const selectNumImages = size => {\n    setPaginateState({\n      size: parseInt(size)\n    });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = page => {\n    setPaginateState({\n      page: page\n    });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  };\n\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container grid-container hide\",\n      children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n          index: index,\n          imageObj: image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-pagination-controls--container hide\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"rLVlqC5JUISdEhwBSEsswCUclvc=\", false, function () {\n  return [useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","useReducer","Pagination","Select","SRLWrapper","useParams","Loading","axios","Gallery","galleryUrls","console","log","params","chosenGallery","gallery","replace","galleryUrl","setGalleryUrl","isLoaded","setIsLoaded","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","numberofImages","name","value","documentStyles","document","documentElement","style","progress","url","onDownloadProgress","progressEvent","Math","round","loaded","setProperty","then","response","data","undefined","allImages","photos","startImg","endImg","currentImages","slice","length","catch","error","status","headers","request","message","config","setTimeout","querySelector","classList","remove","add","updateImages","selectNumImages","parseInt","changeCurrentPage","checkGalleryUrl","map","image","index"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\n\nconst Gallery = ({ galleryUrls }) => {\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(chosenGallery);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  useEffect(() => {\n    if (!isLoaded) {\n      console.log(\"Updated the Gallery\");\n\n      const documentStyles = document.documentElement.style;\n      let progress = 0;\n\n      setIsLoaded(false);\n\n      axios({\n        url: galleryUrl,\n        onDownloadProgress(progressEvent) {\n          progress = Math.round(\n            (progressEvent.loaded / progressEvent.total) * 100\n          );\n\n          documentStyles.setProperty(\"--progress\", `${progress}%`);\n        },\n      })\n        .then((response) => {\n          let data = response.data;\n          if (data !== undefined) {\n            let allImages = data.photos ? data.photos : data;\n            const startImg = (paginateState.page - 1) * paginateState.size;\n            const endImg = startImg + paginateState.size;\n            const currentImages = allImages.slice(startImg, endImg);\n\n            setGalleryState({\n              images: allImages,\n              current: currentImages,\n              total: allImages.length,\n            });\n            setIsLoaded(true);\n          }\n        })\n        .catch((error) => {\n          if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n          }\n          console.log(error.config);\n        });\n      /*\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      getTotalImages().then((data) => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length,\n          });\n          setIsLoaded(true);\n        }\n      });*/\n    }\n  }, [galleryUrl, isLoaded, paginateState, chosenGallery]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document\n          .querySelector(\".gallery-pagination-controls--container\")\n          .classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document\n        .querySelector(\".gallery-pagination-controls--container\")\n        .classList.add(\"hide\");\n    }\n  }, [isLoaded]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n\n    setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n  };\n\n  const selectNumImages = (size) => {\n    setPaginateState({ size: parseInt(size) });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = (page) => {\n    setPaginateState({ page: page });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  };\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return <div>No Images Found</div>;\n  }\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      <Loading isLoading={\"\"} />\n      <div className=\"gallery-container grid-container hide\">\n        <SRLWrapper>\n          {galleryState.current.map((image, index) => (\n            <GalleryImage key={index} index={index} imageObj={image} />\n          ))}\n        </SRLWrapper>\n      </div>\n      <div className=\"gallery-pagination-controls--container hide\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}