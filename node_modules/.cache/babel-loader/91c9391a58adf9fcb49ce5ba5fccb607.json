{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/MobileNav.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/mobileNav.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MobileNav = () => {\n  _s();\n\n  let x1, y1, timeStart, timeEnd;\n  const [navDrawer, setNavDrawer] = useState();\n  const [drawerHeight, setDrawerHeight] = useState();\n\n  const addCloseEventListeners = el => {\n    navDrawer.addEventListener(\"touchstart\", closeStart);\n    navDrawer.addEventListener(\"touchmove\", closeMove);\n    navDrawer.addEventListener(\"touchend\", closeEnd);\n  };\n\n  const removeCloseEventListeners = el => {\n    navDrawer.removeEventListener(\"touchstart\", closeStart);\n    navDrawer.removeEventListener(\"touchmove\", closeMove);\n    navDrawer.removeEventListener(\"touchend\", closeEnd);\n  };\n\n  const addOpenEventListeners = el => {\n    navDrawer.addEventListener(\"touchstart\", openStart);\n    navDrawer.addEventListener(\"touchmove\", openMove);\n    navDrawer.addEventListener(\"touchend\", openEnd);\n  };\n\n  const removeOpenEventListeners = el => {\n    navDrawer.removeEventListener(\"touchstart\", openStart);\n    navDrawer.removeEventListener(\"touchmove\", openMove);\n    navDrawer.removeEventListener(\"touchend\", openEnd);\n  };\n\n  const openStart = event => {\n    let touchLocation = event.targetTouches[0];\n    x1 = touchLocation.clientX;\n    y1 = touchLocation.clientY;\n    timeStart = event.timeStamp;\n    navDrawer.style.transition = \"\";\n  };\n\n  const openMove = event => {\n    let yLocation = event.touches[0].clientY;\n    let xLocation = event.touches[0].clientX;\n    let yDiff = Math.abc(y1 - yLocation);\n    let xDiff = Math.abc(x1 - xLocation);\n\n    if (yLocation > drawerHeight + y1) {\n      yLocation = drawerHeight + y1;\n    }\n\n    if (yDiff > xDiff) {\n      document.body.style.overflow = \"hidden\";\n      navDrawer.style.bottom = `${yLocation - (drawerHeight + y1)}px`;\n    }\n  };\n\n  const openEnd = event => {\n    let y2 = event.changedTouches[0].clientY;\n    timeEnd = event.timeStamp;\n    let timeDiff = timeEnd - timeStart;\n    let yDiff = y2 - y1;\n\n    if (yDiff > drawerHeight / 4 || timeDiff < 200 && yDiff > 19) {\n      openMenu(navDrawer);\n    } else {\n      closeMenu(navDrawer);\n    }\n\n    navDrawer.style.bottom = null;\n  };\n\n  const closeStart = event => {\n    let touchLocation = event.targetTouches[0];\n    x1 = touchLocation.clientX;\n    y1 = touchLocation.clientY;\n    timeStart = event.timeStamp;\n  };\n\n  const closeMove = event => {\n    let touchLocation = event.touches[0];\n    let yLocation = touchLocation.clientY;\n    console.log(yLocation);\n\n    if (yLocation > drawerHeight + y1) {\n      yLocation = drawerHeight + y1;\n    }\n\n    navDrawer.classList.remove(\"active\");\n    navDrawer.style.transition = \"\";\n    let marker = yLocation - y1;\n\n    if (marker > 0) {\n      marker = 0;\n    }\n\n    navDrawer.style.bottom = `${marker}px`;\n  };\n\n  const closeEnd = event => {\n    let touchLocation = event.changedTouches[0];\n    let y2 = touchLocation.clientY;\n    let yDiff = y1 - y2;\n    timeEnd = event.timeStamp;\n    let timeDiff = timeEnd - timeStart;\n\n    if (yDiff > drawerHeight / 3 || timeDiff < 100) {\n      console.log(\"closing\");\n      closeMenu(navDrawer);\n    } else {\n      console.log(\"opening\");\n      openMenu(navDrawer);\n    }\n  };\n\n  const openMenu = el => {\n    el.classList.add(\"active\");\n    navDrawer.style.bottom = null;\n    document.body.style.overflow = \"hidden\";\n    addCloseEventListeners(navDrawer);\n    removeOpenEventListeners(navDrawer);\n  };\n\n  const closeMenu = el => {\n    navDrawer.style.transition = \"0.2s\";\n    navDrawer.style.bottom = null;\n    el.classList.remove(\"avtive\");\n    document.body.style.overflow = \"scroll\";\n    removeCloseEventListeners(navDrawer);\n    addOpenEventListeners(navDrawer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-nav--container\",\n      onTouchStart: openStart,\n      onTouchMove: openMove,\n      onTouchEnd: openEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), getDrawer(), getDrawerHeight()]\n  }, void 0, true);\n};\n\n_s(MobileNav, \"etpHEJuzihmz6FinBVuKV2RPuvs=\");\n\n_c = MobileNav;\nexport default MobileNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileNav\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/MobileNav.js"],"names":["useState","MobileNav","x1","y1","timeStart","timeEnd","navDrawer","setNavDrawer","drawerHeight","setDrawerHeight","addCloseEventListeners","el","addEventListener","closeStart","closeMove","closeEnd","removeCloseEventListeners","removeEventListener","addOpenEventListeners","openStart","openMove","openEnd","removeOpenEventListeners","event","touchLocation","targetTouches","clientX","clientY","timeStamp","style","transition","yLocation","touches","xLocation","yDiff","Math","abc","xDiff","document","body","overflow","bottom","y2","changedTouches","timeDiff","openMenu","closeMenu","console","log","classList","remove","marker","add","getDrawer","getDrawerHeight"],"mappings":"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","sourcesContent":["import \"../css/mobileNav.css\";\nimport { useState } from \"react\";\n\nconst MobileNav = () => {\n  let x1, y1, timeStart, timeEnd;\n  const [navDrawer, setNavDrawer] = useState();\n  const [drawerHeight, setDrawerHeight] = useState();\n\n  const addCloseEventListeners = (el) => {\n    navDrawer.addEventListener(\"touchstart\", closeStart);\n    navDrawer.addEventListener(\"touchmove\", closeMove);\n    navDrawer.addEventListener(\"touchend\", closeEnd);\n  };\n\n  const removeCloseEventListeners = (el) => {\n    navDrawer.removeEventListener(\"touchstart\", closeStart);\n    navDrawer.removeEventListener(\"touchmove\", closeMove);\n    navDrawer.removeEventListener(\"touchend\", closeEnd);\n  };\n\n  const addOpenEventListeners = (el) => {\n    navDrawer.addEventListener(\"touchstart\", openStart);\n    navDrawer.addEventListener(\"touchmove\", openMove);\n    navDrawer.addEventListener(\"touchend\", openEnd);\n  };\n\n  const removeOpenEventListeners = (el) => {\n    navDrawer.removeEventListener(\"touchstart\", openStart);\n    navDrawer.removeEventListener(\"touchmove\", openMove);\n    navDrawer.removeEventListener(\"touchend\", openEnd);\n  };\n\n  const openStart = (event) => {\n    let touchLocation = event.targetTouches[0];\n    x1 = touchLocation.clientX;\n    y1 = touchLocation.clientY;\n    timeStart = event.timeStamp;\n\n    navDrawer.style.transition = \"\";\n  };\n\n  const openMove = (event) => {\n    let yLocation = event.touches[0].clientY;\n    let xLocation = event.touches[0].clientX;\n\n    let yDiff = Math.abc(y1 - yLocation);\n    let xDiff = Math.abc(x1 - xLocation);\n\n    if (yLocation > drawerHeight + y1) {\n      yLocation = drawerHeight + y1;\n    }\n\n    if (yDiff > xDiff) {\n      document.body.style.overflow = \"hidden\";\n\n      navDrawer.style.bottom = `${yLocation - (drawerHeight + y1)}px`;\n    }\n  };\n\n  const openEnd = (event) => {\n    let y2 = event.changedTouches[0].clientY;\n    timeEnd = event.timeStamp;\n    let timeDiff = timeEnd - timeStart;\n    let yDiff = y2 - y1;\n\n    if (yDiff > drawerHeight / 4 || (timeDiff < 200 && yDiff > 19)) {\n      openMenu(navDrawer);\n    } else {\n      closeMenu(navDrawer);\n    }\n    navDrawer.style.bottom = null;\n  };\n\n  const closeStart = (event) => {\n    let touchLocation = event.targetTouches[0];\n    x1 = touchLocation.clientX;\n    y1 = touchLocation.clientY;\n    timeStart = event.timeStamp;\n  };\n\n  const closeMove = (event) => {\n    let touchLocation = event.touches[0];\n    let yLocation = touchLocation.clientY;\n\n    console.log(yLocation);\n\n    if (yLocation > drawerHeight + y1) {\n      yLocation = drawerHeight + y1;\n    }\n\n    navDrawer.classList.remove(\"active\");\n    navDrawer.style.transition = \"\";\n\n    let marker = yLocation - y1;\n    if (marker > 0) {\n      marker = 0;\n    }\n    navDrawer.style.bottom = `${marker}px`;\n  };\n\n  const closeEnd = (event) => {\n    let touchLocation = event.changedTouches[0];\n    let y2 = touchLocation.clientY;\n    let yDiff = y1 - y2;\n    timeEnd = event.timeStamp;\n    let timeDiff = timeEnd - timeStart;\n\n    if (yDiff > drawerHeight / 3 || timeDiff < 100) {\n      console.log(\"closing\");\n      closeMenu(navDrawer);\n    } else {\n      console.log(\"opening\");\n      openMenu(navDrawer);\n    }\n  };\n\n  const openMenu = (el) => {\n    el.classList.add(\"active\");\n\n    navDrawer.style.bottom = null;\n    document.body.style.overflow = \"hidden\";\n\n    addCloseEventListeners(navDrawer);\n    removeOpenEventListeners(navDrawer);\n  };\n\n  const closeMenu = (el) => {\n    navDrawer.style.transition = \"0.2s\";\n\n    navDrawer.style.bottom = null;\n    el.classList.remove(\"avtive\");\n\n    document.body.style.overflow = \"scroll\";\n\n    removeCloseEventListeners(navDrawer);\n    addOpenEventListeners(navDrawer);\n  };\n\n  return (\n    <>\n      <div\n        className=\"mobile-nav--container\"\n        onTouchStart={openStart}\n        onTouchMove={openMove}\n        onTouchEnd={openEnd}\n      ></div>\n      {getDrawer()}\n      {getDrawerHeight()}\n    </>\n  );\n};\n\nexport default MobileNav;\n"]},"metadata":{},"sourceType":"module"}