{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  galleryUrls,\n  updateLikedPics\n}) => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hqImage, setHqImage] = useState(false);\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  useEffect(() => {\n    if (!isLoaded && Object.keys(galleryUrl).length) {\n      console.log(\"Updated the Gallery\");\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      getTotalImages().then(data => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length\n          });\n          setIsLoaded(true);\n        }\n      });\n    }\n  }, [galleryUrl, isLoaded, paginateState, chosenGallery]);\n  useEffect(() => {\n    if (isLoaded) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document.querySelector(\".gallery-pagination-controls--container\").classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document.querySelector(\".gallery-pagination-controls--container\").classList.add(\"hide\");\n    }\n  }, [isLoaded]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n    setGalleryState({\n      current: galleryState.images.slice(startImg, endImg)\n    });\n  };\n\n  const selectNumImages = size => {\n    setPaginateState({\n      size: parseInt(size)\n    });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = page => {\n    setPaginateState({\n      page: page\n    });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  };\n\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n\n  const highQualityImages = e => {\n    setHqImage(e.target.checked);\n  };\n\n  const likeImage = event => {\n    const target = event.target.closest(\".gallery-image\");\n    const image = {\n      id: galleryNode.dataset.mediaId,\n      src: galleryNode.dataset.mediaSrc,\n      title: galleryNode.dataset.mediaTitle,\n      date: galleryNode.dataset.mediaDate\n    };\n    updateLikedPics(image, event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"High-quality-images\",\n      children: [\"High Quality Images (Loads slower)\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"High-quality-images\",\n        className: \"HD-selector\",\n        onChange: highQualityImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), isLoaded || Object.keys(galleryUrl).length === 0 ? /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: \"hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 63\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 96\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(galleryUrl).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"You like nothing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container grid-container hide\",\n      children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n          likeImage: likeImage,\n          imageObj: image,\n          highqtyImage: hqImage\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-pagination-controls--container hide\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"BAmZNLx9WXju4rKccUIMcBPE3hM=\", false, function () {\n  return [useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","useReducer","Pagination","Select","SRLWrapper","useParams","Loading","Gallery","galleryUrls","updateLikedPics","console","log","params","chosenGallery","gallery","replace","galleryUrl","setGalleryUrl","isLoaded","setIsLoaded","hqImage","setHqImage","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","numberofImages","name","value","Object","keys","length","window","scrollTo","top","document","body","scrollHeight","behavior","getTotalImages","response","fetch","ok","Error","statusText","json","err","then","data","undefined","allImages","photos","startImg","endImg","currentImages","slice","setTimeout","querySelector","classList","remove","add","updateImages","selectNumImages","parseInt","changeCurrentPage","checkGalleryUrl","highQualityImages","e","target","checked","likeImage","event","closest","image","id","galleryNode","dataset","mediaId","src","mediaSrc","title","mediaTitle","date","mediaDate","map","index"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,qCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAsC;AAAA;;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,aAAa,GAAGL,WAAW,CAACI,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuB,GAAvB,EAA4B,GAA5B,CAAD,CAAjC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCtB,UAAU,CAChD,CAACqB,YAAD,EAAeE,QAAf,MAA6B,EAAE,GAAGF,YAAL;AAAmB,OAAGE;AAAtB,GAA7B,CADgD,EAEhD;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,OAAO,EAAE,EAAvB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAFgD,CAAlD;AAIA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC5B,UAAU,CAClD,CAAC2B,aAAD,EAAgBJ,QAAhB,MAA8B,EAAE,GAAGI,aAAL;AAAoB,OAAGJ;AAAvB,GAA9B,CADkD,EAElD;AAAEM,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAFkD,CAApD;AAIA,QAAMC,cAAc,GAAG,CACrB;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADqB,EAKrB;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALqB,EASrB;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATqB,EAarB;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbqB,EAiBrB;AACED,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBqB,CAAvB;AAuBAlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACkB,QAAD,IAAciB,MAAM,CAACC,IAAP,CAAYpB,UAAZ,EAAwBqB,MAA1C,EAAmD;AACjD3B,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA2B,MAAAA,MAAM,CAACC,QAAP,CAAgB;AAAEC,QAAAA,GAAG,EAAEC,QAAQ,CAACC,IAAT,CAAcC,YAArB;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C,OAAhB;;AACA,qBAAeC,cAAf,GAAgC;AAC9B,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC/B,UAAD,CAA5B;;AACA,cAAI,CAAC8B,QAAQ,CAACE,EAAd,EAAkB;AAChB,kBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD;;AACD,iBAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,SAND,CAME,OAAOC,GAAP,EAAY;AACZ1C,UAAAA,OAAO,CAACC,GAAR,CAAYyC,GAAZ;AACD;AACF;;AACDP,MAAAA,cAAc,GAAGQ,IAAjB,CAAuBC,IAAD,IAAU;AAC9B,YAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,cAAIC,SAAS,GAAGF,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAnB,GAA4BH,IAA5C;AACA,gBAAMI,QAAQ,GAAG,CAAC9B,aAAa,CAACE,IAAd,GAAqB,CAAtB,IAA2BF,aAAa,CAACG,IAA1D;AACA,gBAAM4B,MAAM,GAAGD,QAAQ,GAAG9B,aAAa,CAACG,IAAxC;AACA,gBAAM6B,aAAa,GAAGJ,SAAS,CAACK,KAAV,CAAgBH,QAAhB,EAA0BC,MAA1B,CAAtB;AAEApC,UAAAA,eAAe,CAAC;AACdE,YAAAA,MAAM,EAAE+B,SADM;AAEd9B,YAAAA,OAAO,EAAEkC,aAFK;AAGdjC,YAAAA,KAAK,EAAE6B,SAAS,CAACnB;AAHH,WAAD,CAAf;AAKAlB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,OAdD;AAeD;AACF,GA/BQ,EA+BN,CAACH,UAAD,EAAaE,QAAb,EAAuBU,aAAvB,EAAsCf,aAAtC,CA/BM,CAAT;AAiCAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,QAAJ,EAAc;AACZ4C,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,QAAQ,CAACsB,aAAT,CAAuB,oBAAvB,EAA6CC,SAA7C,CAAuDC,MAAvD,CAA8D,MAA9D;AACAxB,QAAAA,QAAQ,CACLsB,aADH,CACiB,yCADjB,EAEGC,SAFH,CAEaC,MAFb,CAEoB,MAFpB;AAGD,OALS,EAKP,GALO,CAAV;AAMD,KAPD,MAOO;AACLxB,MAAAA,QAAQ,CAACsB,aAAT,CAAuB,oBAAvB,EAA6CC,SAA7C,CAAuDE,GAAvD,CAA2D,MAA3D;AACAzB,MAAAA,QAAQ,CACLsB,aADH,CACiB,yCADjB,EAEGC,SAFH,CAEaE,GAFb,CAEiB,MAFjB;AAGD;AACF,GAdQ,EAcN,CAAChD,QAAD,CAdM,CAAT;;AAgBA,QAAMiD,YAAY,GAAG,CAACrC,IAAD,EAAOC,IAAP,KAAgB;AACnC,UAAM2B,QAAQ,GAAG,CAAC5B,IAAI,GAAG,CAAR,IAAaC,IAA9B;AACA,UAAM4B,MAAM,GAAGD,QAAQ,GAAG3B,IAA1B;AAEAR,IAAAA,eAAe,CAAC;AAAEG,MAAAA,OAAO,EAAEJ,YAAY,CAACG,MAAb,CAAoBoC,KAApB,CAA0BH,QAA1B,EAAoCC,MAApC;AAAX,KAAD,CAAf;AACD,GALD;;AAOA,QAAMS,eAAe,GAAIrC,IAAD,IAAU;AAChCF,IAAAA,gBAAgB,CAAC;AAAEE,MAAAA,IAAI,EAAEsC,QAAQ,CAACtC,IAAD;AAAhB,KAAD,CAAhB;AACAoC,IAAAA,YAAY,CAACvC,aAAa,CAACE,IAAf,EAAqBuC,QAAQ,CAACtC,IAAD,CAA7B,CAAZ;AACD,GAHD;;AAKA,QAAMuC,iBAAiB,GAAIxC,IAAD,IAAU;AAClCD,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA,IAAI,EAAEA;AAAR,KAAD,CAAhB;AACAqC,IAAAA,YAAY,CAACrC,IAAD,EAAOF,aAAa,CAACG,IAArB,CAAZ;AACD,GAHD;;AAKA,QAAMwC,eAAe,GAAG,MAAM;AAC5B,QAAIvD,UAAU,KAAKH,aAAnB,EAAkC;AAChCI,MAAAA,aAAa,CAACJ,aAAD,CAAb;AACAM,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GALD;;AAMAoD,EAAAA,eAAe;;AAEf,MAAIjD,YAAY,CAACI,OAAb,KAAyB,UAA7B,EAAyC;AACvC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAM8C,iBAAiB,GAAIC,CAAD,IAAO;AAC/BpD,IAAAA,UAAU,CAACoD,CAAC,CAACC,MAAF,CAASC,OAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,UAAMH,MAAM,GAAGG,KAAK,CAACH,MAAN,CAAaI,OAAb,CAAqB,gBAArB,CAAf;AACA,UAAMC,KAAK,GAAG;AACZC,MAAAA,EAAE,EAAEC,WAAW,CAACC,OAAZ,CAAoBC,OADZ;AAEZC,MAAAA,GAAG,EAAEH,WAAW,CAACC,OAAZ,CAAoBG,QAFb;AAGZC,MAAAA,KAAK,EAAEL,WAAW,CAACC,OAAZ,CAAoBK,UAHf;AAIZC,MAAAA,IAAI,EAAEP,WAAW,CAACC,OAAZ,CAAoBO;AAJd,KAAd;AAMAhF,IAAAA,eAAe,CAACsE,KAAD,EAAQF,KAAK,CAACH,MAAN,CAAaC,OAArB,CAAf;AACD,GATD;;AAWA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEP,eAAlB;AAAmC,MAAA,MAAM,EAAEpC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,OAAO,EAAC,qBAAf;AAAA,oEACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,qBAA1B;AAAgD,QAAA,SAAS,EAAC,aAA1D;AAAwE,QAAA,QAAQ,EAAEwC;AAAlF;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIItD,QAAQ,IAAKiB,MAAM,CAACC,IAAP,CAAYpB,UAAZ,EAAwBqB,MAAxB,KAAmC,CAAjD,gBAAuD,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAAvD,gBAAwF,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAJ3F,eAKE;AAAA,gBACGF,MAAM,CAACC,IAAP,CAAYpB,UAAZ,EAAwBqB,MAAxB,KAAmC,CAAnC,gBAAuC;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAvC,gBAAqF;AAAA;AAAA;AAAA;AAAA;AADxF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,6BACE,QAAC,UAAD;AAAA,kBACGf,YAAY,CAACI,OAAb,CAAqBgE,GAArB,CAAyB,CAACX,KAAD,EAAQY,KAAR,kBACxB,QAAC,YAAD;AAA0B,UAAA,SAAS,EAAEf,SAArC;AAAgD,UAAA,QAAQ,EAAEG,KAA1D;AAAiE,UAAA,YAAY,EAAE3D;AAA/E,WAAmBuE,KAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,WAAW,EAAE/D,aAAa,CAACE,IAD7B;AAEE,QAAA,iBAAiB,EAAEwC,iBAFrB;AAGE,QAAA,SAAS,EAAEhD,YAAY,CAACK,KAH1B;AAIE,QAAA,WAAW,EAAEC,aAAa,CAACG,IAJ7B;AAKE,QAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AA2BD,CA9JD;;GAAMxB,O;UAEWF,S;;;KAFXE,O;AAgKN,eAAeA,OAAf","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"./Loading\";\n\nconst Gallery = ({ galleryUrls, updateLikedPics }) => {\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryUrl, setGalleryUrl] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hqImage, setHqImage] = useState(false)\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  useEffect(() => {\n    if (!isLoaded && (Object.keys(galleryUrl).length)) {\n      console.log(\"Updated the Gallery\");\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      getTotalImages().then((data) => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length,\n          });\n          setIsLoaded(true);\n        }\n      });\n    }\n  }, [galleryUrl, isLoaded, paginateState, chosenGallery]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      setTimeout(() => {\n        document.querySelector(\".gallery-container\").classList.remove(\"hide\");\n        document\n          .querySelector(\".gallery-pagination-controls--container\")\n          .classList.remove(\"hide\");\n      }, 500);\n    } else {\n      document.querySelector(\".gallery-container\").classList.add(\"hide\");\n      document\n        .querySelector(\".gallery-pagination-controls--container\")\n        .classList.add(\"hide\");\n    }\n  }, [isLoaded]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n\n    setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n  };\n\n  const selectNumImages = (size) => {\n    setPaginateState({ size: parseInt(size) });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = (page) => {\n    setPaginateState({ page: page });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n      setIsLoaded(false);\n    }\n  };\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return <div>No Images Found</div>;\n  }\n\n  const highQualityImages = (e) => {\n    setHqImage(e.target.checked);\n  }\n\n  const likeImage = (event) => {\n    const target = event.target.closest(\".gallery-image\");\n    const image = {\n      id: galleryNode.dataset.mediaId,\n      src: galleryNode.dataset.mediaSrc,\n      title: galleryNode.dataset.mediaTitle,\n      date: galleryNode.dataset.mediaDate,\n    }\n    updateLikedPics(image, event.target.checked);\n  };\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      <label htmlFor=\"High-quality-images\">High Quality Images (Loads slower)\n      <input type=\"checkbox\" id=\"High-quality-images\" className=\"HD-selector\" onChange={highQualityImages} /></label>\n      {(isLoaded || (Object.keys(galleryUrl).length === 0)) ? <Loading isLoading={\"hide\"} /> : <Loading isLoading={\"\"} />}\n      <div>\n        {Object.keys(galleryUrl).length === 0 ? <div><span>You like nothing...</span></div> : <span></span> }\n      </div>\n      <div className=\"gallery-container grid-container hide\">\n        <SRLWrapper>\n          {galleryState.current.map((image, index) => (\n            <GalleryImage key={index} likeImage={likeImage} imageObj={image} highqtyImage={hqImage} />\n          ))}\n        </SRLWrapper>\n      </div>\n      <div className=\"gallery-pagination-controls--container hide\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}