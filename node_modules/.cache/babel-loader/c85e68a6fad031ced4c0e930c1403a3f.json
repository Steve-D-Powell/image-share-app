{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  console.log(\"Hello?\");\n  const [imageOfTheDay, setImageOfTheDay] = useState({\n    url: \"/images/stars.jpg\"\n  });\n  const [headerIsLoaded, setHeaderIsLoaded] = useState(false);\n  useEffect(() => {\n    if (headerIsLoaded) {\n      setTimeout(() => {\n        document.querySelector(\".loading-screen--container\").classList.add(\"hide\");\n        document.querySelector(\"body\").style.overflow = \"scroll\";\n      }, 1000);\n    }\n  }, [headerIsLoaded]);\n  useEffect(() => {\n    async function getImageOfTheDay() {\n      try {\n        const response = await fetch(\"https://api.nasa.gov/planetary/apod?api_key=KnTfeP68Y6KMuMuhCMWSxjlYXsqjgoCWUo8chunG\");\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getImageOfTheDay().then(data => {\n      if (data !== undefined) {\n        setImageOfTheDay(data);\n        setHeaderIsLoaded(true);\n      }\n    });\n  }, []);\n  /*\n  const styles = {\n    headerHero: {\n      backgroundImage: `url(${imageOfTheDay.url}`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      src: `url(${imageOfTheDay.url}`,\n      className: \"header-hero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"LuAFApy3iXDu0aqfwJiF6KW6lmU=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Header.js"],"names":["React","useState","useEffect","Header","props","console","log","imageOfTheDay","setImageOfTheDay","url","headerIsLoaded","setHeaderIsLoaded","setTimeout","document","querySelector","classList","add","style","overflow","getImageOfTheDay","response","fetch","ok","Error","statusText","json","err","then","data","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC;AACjDQ,IAAAA,GAAG,EAAE;AAD4C,GAAD,CAAlD;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,cAAJ,EAAoB;AAClBE,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,QAAQ,CACLC,aADH,CACiB,4BADjB,EAEGC,SAFH,CAEaC,GAFb,CAEiB,MAFjB;AAGAH,QAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BG,KAA/B,CAAqCC,QAArC,GAAgD,QAAhD;AACD,OALS,EAKP,IALO,CAAV;AAMD;AACF,GATQ,EASN,CAACR,cAAD,CATM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,gBAAf,GAAkC;AAChC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sFAD0B,CAA5B;;AAGA,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD;;AACD,eAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACD,OARD,CAQE,OAAOC,GAAP,EAAY;AACZrB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ;AACD;AACF;;AACDP,IAAAA,gBAAgB,GAAGQ,IAAnB,CAAyBC,IAAD,IAAU;AAChC,UAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtBrB,QAAAA,gBAAgB,CAACoB,IAAD,CAAhB;AACAjB,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,KALD;AAMD,GApBQ,EAoBN,EApBM,CAAT;AAqBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,2BACE;AAAO,MAAA,GAAG,EAAG,OAAMJ,aAAa,CAACE,GAAI,EAArC;AAAwC,MAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArDD;;GAAMN,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/Header.css\";\n\nconst Header = (props) => {\n  console.log(\"Hello?\");\n  const [imageOfTheDay, setImageOfTheDay] = useState({\n    url: \"/images/stars.jpg\",\n  });\n  const [headerIsLoaded, setHeaderIsLoaded] = useState(false);\n\n  useEffect(() => {\n    if (headerIsLoaded) {\n      setTimeout(() => {\n        document\n          .querySelector(\".loading-screen--container\")\n          .classList.add(\"hide\");\n        document.querySelector(\"body\").style.overflow = \"scroll\";\n      }, 1000);\n    }\n  }, [headerIsLoaded]);\n\n  useEffect(() => {\n    async function getImageOfTheDay() {\n      try {\n        const response = await fetch(\n          \"https://api.nasa.gov/planetary/apod?api_key=KnTfeP68Y6KMuMuhCMWSxjlYXsqjgoCWUo8chunG\"\n        );\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return await response.json();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getImageOfTheDay().then((data) => {\n      if (data !== undefined) {\n        setImageOfTheDay(data);\n        setHeaderIsLoaded(true);\n      }\n    });\n  }, []);\n  /*\n  const styles = {\n    headerHero: {\n      backgroundImage: `url(${imageOfTheDay.url}`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n  };*/\n\n  return (\n    <header className=\"App-header\">\n      <video src={`url(${imageOfTheDay.url}`} className=\"header-hero\"></video>\n    </header>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}