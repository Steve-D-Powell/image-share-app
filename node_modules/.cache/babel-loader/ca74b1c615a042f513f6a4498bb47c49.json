{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer, useCallback } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  galleryUrls\n}) => {\n  _s();\n\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryState, setGalleryState] = useReducer((galleryState, newState) => ({ ...galleryState,\n    ...newState\n  }), {\n    images: [],\n    current: [],\n    total: 0\n  });\n  const [paginateState, setPaginateState] = useReducer((paginateState, newState) => ({ ...paginateState,\n    ...newState\n  }), {\n    page: 1,\n    size: 10\n  });\n  const [galleryUrl, setGalleryUrl] = useState(chosenGallery);\n  const numberofImages = [{\n    name: \"10 Images\",\n    value: \"10\"\n  }, {\n    name: \"20 Images\",\n    value: \"20\"\n  }, {\n    name: \"30 Images\",\n    value: \"30\"\n  }, {\n    name: \"40 Images\",\n    value: \"40\"\n  }, {\n    name: \"50 Images\",\n    value: \"50\"\n  }];\n  useEffect(() => {\n    if (galleryUrl) {\n      console.log(\"Updated the Gallery\");\n\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n      getTotalImages().then(data => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length\n          });\n        }\n      });\n    }\n  }, [galleryUrl]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n    setGalleryState({\n      current: galleryState.images.slice(startImg, endImg)\n    });\n  };\n\n  const selectNumImages = size => {\n    setPaginateState({\n      size: parseInt(size)\n    });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = page => {\n    setPaginateState({\n      page: page\n    });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n    }\n  };\n\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: selectNumImages,\n      values: numberofImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: galleryState.current.map((image, index) => /*#__PURE__*/_jsxDEV(GalleryImage, {\n          index: index,\n          imageObj: image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls--container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: paginateState.page,\n        changeCurrentPage: changeCurrentPage,\n        totalSize: galleryState.total,\n        sizePerPage: paginateState.size,\n        theme: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"hieSR+beXNBheNiUWMJBvPSoIzM=\", false, function () {\n  return [useParams];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/steve/Projects/FED Intern Application/image-share-app/src/components/Gallery.js"],"names":["GalleryImage","useState","useEffect","useReducer","useCallback","Pagination","Select","SRLWrapper","useParams","Gallery","galleryUrls","console","log","params","chosenGallery","gallery","replace","galleryState","setGalleryState","newState","images","current","total","paginateState","setPaginateState","page","size","galleryUrl","setGalleryUrl","numberofImages","name","value","getTotalImages","response","fetch","ok","Error","statusText","json","err","then","data","undefined","allImages","photos","startImg","endImg","currentImages","slice","length","updateImages","selectNumImages","parseInt","changeCurrentPage","checkGalleryUrl","map","image","index"],"mappings":"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","sourcesContent":["import \"../css/Gallery.css\";\nimport GalleryImage from \"./GaleryImage\";\nimport { useState, useEffect, useReducer, useCallback } from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport \"react-pagination-js/dist/styles.css\";\nimport Select from \"./Select\";\nimport { SRLWrapper } from \"simple-react-lightbox-pro\";\nimport { useParams } from \"react-router-dom\";\n\nconst Gallery = ({ galleryUrls }) => {\n  console.log(\"Gallery Rendered\");\n  const params = useParams();\n  const chosenGallery = galleryUrls[params.gallery.replace(\"-\", \"_\")];\n  const [galleryState, setGalleryState] = useReducer(\n    (galleryState, newState) => ({ ...galleryState, ...newState }),\n    { images: [], current: [], total: 0 }\n  );\n  const [paginateState, setPaginateState] = useReducer(\n    (paginateState, newState) => ({ ...paginateState, ...newState }),\n    { page: 1, size: 10 }\n  );\n  const [galleryUrl, setGalleryUrl] = useState(chosenGallery);\n  const numberofImages = [\n    {\n      name: \"10 Images\",\n      value: \"10\",\n    },\n    {\n      name: \"20 Images\",\n      value: \"20\",\n    },\n    {\n      name: \"30 Images\",\n      value: \"30\",\n    },\n    {\n      name: \"40 Images\",\n      value: \"40\",\n    },\n    {\n      name: \"50 Images\",\n      value: \"50\",\n    },\n  ];\n\n  useEffect(() => {\n    if (galleryUrl) {\n      console.log(\"Updated the Gallery\");\n      async function getTotalImages() {\n        try {\n          const response = await fetch(galleryUrl);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return await response.json();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      getTotalImages().then((data) => {\n        if (data !== undefined) {\n          let allImages = data.photos ? data.photos : data;\n          const startImg = (paginateState.page - 1) * paginateState.size;\n          const endImg = startImg + paginateState.size;\n          const currentImages = allImages.slice(startImg, endImg);\n\n          setGalleryState({\n            images: allImages,\n            current: currentImages,\n            total: allImages.length,\n          });\n        }\n      });\n    }\n  }, [galleryUrl]);\n\n  const updateImages = (page, size) => {\n    const startImg = (page - 1) * size;\n    const endImg = startImg + size;\n\n    setGalleryState({ current: galleryState.images.slice(startImg, endImg) });\n  };\n\n  const selectNumImages = (size) => {\n    setPaginateState({ size: parseInt(size) });\n    updateImages(paginateState.page, parseInt(size));\n  };\n\n  const changeCurrentPage = (page) => {\n    setPaginateState({ page: page });\n    updateImages(page, paginateState.size);\n  };\n\n  const checkGalleryUrl = () => {\n    if (galleryUrl !== chosenGallery) {\n      setGalleryUrl(chosenGallery);\n    }\n  };\n  checkGalleryUrl();\n\n  if (galleryState.current === \"unloaded\") {\n    return <div>No Images Found</div>;\n  }\n\n  return (\n    <>\n      <Select onChange={selectNumImages} values={numberofImages} />\n      <div className=\"grid-container\">\n        <SRLWrapper>\n          {galleryState.current.map((image, index) => (\n            <GalleryImage key={index} index={index} imageObj={image} />\n          ))}\n        </SRLWrapper>\n      </div>\n      <div className=\"pagination-controls--container\">\n        <Pagination\n          currentPage={paginateState.page}\n          changeCurrentPage={changeCurrentPage}\n          totalSize={galleryState.total}\n          sizePerPage={paginateState.size}\n          theme=\"dark\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}